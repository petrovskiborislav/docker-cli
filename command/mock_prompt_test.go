// Code generated by mockery v2.14.0. DO NOT EDIT.

package command_test

import (
	mock "github.com/stretchr/testify/mock"

	survey "gopkg.in/AlecAivazis/survey.v1"
)

// mockPrompt is an autogenerated mock type for the Prompt type
type mockPrompt struct {
	mock.Mock
}

// SelectPrompt provides a mock function with given fields: label, items, opts
func (_m *mockPrompt) SelectPrompt(label string, items []string, opts ...survey.AskOpt) ([]string, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, label, items)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []string
	if rf, ok := ret.Get(0).(func(string, []string, ...survey.AskOpt) []string); ok {
		r0 = rf(label, items, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []string, ...survey.AskOpt) error); ok {
		r1 = rf(label, items, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockPrompt interface {
	mock.TestingT
	Cleanup(func())
}

// newMockPrompt creates a new instance of mockPrompt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockPrompt(t mockConstructorTestingTnewMockPrompt) *mockPrompt {
	mock := &mockPrompt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
